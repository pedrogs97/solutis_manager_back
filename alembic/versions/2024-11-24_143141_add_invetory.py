"""Add invetory

Revision ID: 8259cbcc566c
Revises: cbc6cdab6542
Create Date: 2024-11-24 14:31:41.331639

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "8259cbcc566c"
down_revision: Union[str, None] = "cbc6cdab6542"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "inventory",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("accepted_term_at", sa.DateTime(), nullable=True),
        sa.Column("phone", sa.String(length=11), nullable=True),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "inventory_extra_asset",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("register_number", sa.String(length=255), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("serial_number", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("inventory_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["inventory_id"],
            ["inventory.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "inventory_extra_item",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("inventory_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["inventory_id"],
            ["inventory.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "inventory_lending",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("justification", sa.String(length=255), nullable=True),
        sa.Column("confirm", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("inventory_id", sa.Integer(), nullable=False),
        sa.Column("lending_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["inventory_id"],
            ["inventory.id"],
        ),
        sa.ForeignKeyConstraint(
            ["lending_id"],
            ["lending.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "inventory_term",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("justification", sa.String(length=255), nullable=True),
        sa.Column("confirm", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("inventory_id", sa.Integer(), nullable=False),
        sa.Column("term_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["inventory_id"],
            ["inventory.id"],
        ),
        sa.ForeignKeyConstraint(
            ["term_id"],
            ["term.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("inventory_term")
    op.drop_table("inventory_lending")
    op.drop_table("inventory_extra_item")
    op.drop_table("inventory_extra_asset")
    op.drop_table("inventory")
    # ### end Alembic commands ###
