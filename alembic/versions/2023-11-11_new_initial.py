"""new initial

Revision ID: fd5d5bfadf18
Revises:
Create Date: 2023-11-11 01:22:02.903895

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "fd5d5bfadf18"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "upgrade",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("status_id", sa.Integer(), nullable=True),
        sa.Column("open_date", sa.Date(), nullable=True),
        sa.Column("close_date", sa.Date(), nullable=True),
        sa.Column("glpi_number", sa.String(length=50), nullable=True),
        sa.Column("detailing", sa.String(length=255), nullable=True),
        sa.Column("supplier", sa.String(length=100), nullable=True),
        sa.Column("observations", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["maintenance_status.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "verification",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("asset_type_id", sa.Integer(), nullable=False),
        sa.Column("question", sa.String(length=100), nullable=True),
        sa.Column("step", sa.String(length=2), nullable=True),
        sa.ForeignKeyConstraint(
            ["asset_type_id"],
            ["asset_type.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "lending",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("asset_id", sa.Integer(), nullable=False),
        sa.Column("document_id", sa.Integer(), nullable=True),
        sa.Column("workload_id", sa.Integer(), nullable=False),
        sa.Column("cost_center_id", sa.Integer(), nullable=False),
        sa.Column("number", sa.String(length=30), nullable=True),
        sa.Column("manager", sa.String(length=50), nullable=True),
        sa.Column("observations", sa.String(length=255), nullable=True),
        sa.Column("signed_date", sa.Date(), nullable=True),
        sa.Column("glpi_number", sa.String(length=25), nullable=True),
        sa.ForeignKeyConstraint(
            ["asset_id"],
            ["asset.id"],
        ),
        sa.ForeignKeyConstraint(
            ["cost_center_id"],
            ["cost_center.id"],
        ),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["document.id"],
        ),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workload_id"],
            ["workload.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "maintenance_attachment",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("maintenance_id", sa.Integer(), nullable=True),
        sa.Column("path", sa.String(length=255), nullable=True),
        sa.Column("file_name", sa.String(length=100), nullable=True),
        sa.ForeignKeyConstraint(
            ["maintenance_id"],
            ["maintenance.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("is_staff", sa.Boolean(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "witness",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("signed", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "token",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(length=255), nullable=False),
        sa.Column("expires_in", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("token"),
    )
    op.create_table(
        "verification_answer",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("lending_id", sa.Integer(), nullable=False),
        sa.Column("verification_id", sa.Integer(), nullable=True),
        sa.Column("type_id", sa.Integer(), nullable=True),
        sa.Column("answer", sa.String(length=100), nullable=False),
        sa.Column("observations", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["lending_id"],
            ["lending.id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["verification_type.id"],
        ),
        sa.ForeignKeyConstraint(
            ["verification_id"],
            ["verification.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "witnesses",
        sa.Column("lending_id", sa.Integer(), nullable=True),
        sa.Column("witness_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["lending_id"],
            ["lending.id"],
        ),
        sa.ForeignKeyConstraint(
            ["witness_id"],
            ["witness.id"],
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("witnesses")
    op.drop_table("verification_answer")
    op.drop_table("token")
    op.drop_table("witness")
    op.drop_table("user")
    op.drop_table("maintenance_attachment")
    op.drop_table("lending")
    op.drop_table("verification")
    op.drop_table("upgrade")
    # ### end Alembic commands ###
