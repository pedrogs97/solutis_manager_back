"""revert pivot tables id

Revision ID: 55252e824ad2
Revises: 4d6e78a1cf8a
Create Date: 2023-12-18 21:54:02.111269

"""
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '55252e824ad2'
down_revision: Union[str, None] = '4d6e78a1cf8a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('invoice_assets', 'invoice_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('invoice_assets', 'asset_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.drop_column('invoice_assets', 'id')
    op.alter_column('lending_witnesses', 'lending_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('lending_witnesses', 'witness_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.drop_column('lending_witnesses', 'id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('lending_witnesses', sa.Column('id', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.alter_column('lending_witnesses', 'witness_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('lending_witnesses', 'lending_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.add_column('invoice_assets', sa.Column('id', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.alter_column('invoice_assets', 'asset_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('invoice_assets', 'invoice_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
