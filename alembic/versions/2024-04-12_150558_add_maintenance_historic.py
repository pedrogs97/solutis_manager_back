"""add maintenance historic

Revision ID: 26891681233c
Revises: 73d90a21e70d
Create Date: 2024-04-12 15:05:58.247342

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "26891681233c"
down_revision: Union[str, None] = "73d90a21e70d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "maintenance_criticality",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=10), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "maintenance_historic",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("maintenance_id", sa.Integer(), nullable=True),
        sa.Column("status_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(
            ["maintenance_id"],
            ["maintenance.id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["maintenance_status.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "upgrade_historic",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("upgrade_id", sa.Integer(), nullable=True),
        sa.Column("status_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["maintenance_status.id"],
        ),
        sa.ForeignKeyConstraint(
            ["upgrade_id"],
            ["upgrade.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column("maintenance", sa.Column("value", sa.Float(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("maintenance", "value")
    op.drop_table("upgrade_historic")
    op.drop_table("maintenance_historic")
    op.drop_table("maintenance_criticality")
    # ### end Alembic commands ###
